name: Create package

on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - 'master'

jobs:
  publish:

    runs-on: macos-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Install GPG
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: |
          brew install gpg
          echo "$SIGNING_KEY" | gpg --dearmor > ${HOME}/secring.gpg

      - name: Add Gradle Properties
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: |
          echo "mavenCentralUsername=${MAVEN_CENTRAL_USERNAME}" >> gradle.properties
          echo "mavenCentralPassword=${MAVEN_CENTRAL_PASSWORD}" >> gradle.properties
          echo "signing.keyId=${SIGNING_KEY_ID}" >> gradle.properties
          echo "signing.password=${SIGNING_KEY_PASSWORD}" >> gradle.properties
          echo "signing.secretKeyRingFile=${HOME}/secring.gpg" >> gradle.properties  

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build
        run: ./gradlew assemble --stacktrace -PGITHUB_USER=${{ secrets.CURRENT_GITHUB_USER }} -PGITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: Release package to github
        run: ./gradlew publishKotlinMultiplatformPublicationToMavenRepository -PGITHUB_USER=${{ secrets.CURRENT_GITHUB_USER }} -PGITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: Publish To Maven Central
        run: |
            ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache -PGITHUB_USER=${{ secrets.CURRENT_GITHUB_USER }} -PGITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

  release:
    name: Create release
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commitish: ${{ github.ref }}
          tag_name: release/${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.version }}
          body: "Will be filled later"
          draft: true
